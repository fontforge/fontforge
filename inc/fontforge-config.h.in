/* This is a GENERATED file, please see fontforge-config.h.in */

/* Copyright (C) 2000-2019 FontForge authors */
/*
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.

 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.

 * The name of the author may not be used to endorse or promote products
 * derived from this software without specific prior written permission.

 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef FONTFORGE_CONFIG_H
#define FONTFORGE_CONFIG_H

/* The tagged version of FontForge. Additional versioning information in fontforge-version-extras.h */
#define FONTFORGE_VERSION "@PROJECT_VERSION@"

/* The install prefix configured at configure/compile time, used as a last resort */
#define FONTFORGE_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@"

#define SERIF_UI_FAMILIES "@FONTFORGE_SERIF_FAMILIES@"
#define SANS_UI_FAMILIES  "@FONTFORGE_UI_FAMILIES@"
#define LABEL_UI_FAMILIES "@FONTFORGE_LABEL_FAMILIES@"
#define MONO_UI_FAMILIES  "@FONTFORGE_MONO_FAMILIES@"

/* Platform checks */

#cmakedefine WORDS_BIGENDIAN 1


/* Mac specific defines */

#cmakedefine _CursorsMustBe16x16 1

#cmakedefine __Mac 1


/* Cygwin specific defines */

#cmakedefine __CygWin 1

#cmakedefine _BrokenBitmapImages 1

#cmakedefine _ModKeysAutoRepeat 1

/* Header checks */

#cmakedefine HAVE_EXECINFO_H 1

#cmakedefine HAVE_LIBINTL_H 1

#cmakedefine HAVE_IEEEFP_H 1

/* Function checks */

#cmakedefine HAVE_REALPATH 1

/* FontForge configurable options */

#cmakedefine FONTFORGE_CONFIG_SHOW_RAW_POINTS 1

#cmakedefine FONTFORGE_CONFIG_TILEPATH 1

#cmakedefine FONTFORGE_CONFIG_WRITE_PFM 1

#cmakedefine FONTFORGE_CONFIG_USE_DOUBLE 1

#cmakedefine FREETYPE_HAS_DEBUGGER 1


/* FontForge feature detection */

#cmakedefine _NO_XKB 1

#cmakedefine _NO_XINPUT 1

#cmakedefine X_DISPLAY_MISSING 1

#cmakedefine FONTFORGE_CAN_USE_GDK 1

#cmakedefine FONTFORGE_CAN_USE_WOFF2 1

#cmakedefine _NO_FFSCRIPT 1

#cmakedefine _NO_LIBJPEG 1

#cmakedefine _NO_LIBPNG 1

#cmakedefine _NO_LIBSPIRO 1

#cmakedefine _NO_LIBTIFF 1

#cmakedefine _NO_LIBUNGIF 1

#cmakedefine _NO_PYTHON 1

#cmakedefine _NO_LIBREADLINE 1

#cmakedefine _LIBSPIRO_FUN @_LIBSPIRO_FUN@


/* More or less obsolete settings from the old configure-fontforge.h */

/* Apple suggests using a sfnt version of 'true' for fonts designed for use   */
/*  only on a mac (windows refuses such fonts). I generally prefer to have a  */
/*  font work everywhere, so normally ff produces fonts with version 1.0      */
/*  Set this if you want Apple only fonts (produced when Apple mode is set and*/
/*  Opentype mode is unset in the Generate Fonts-Options dialog).             */
/*                                                                            */
/* #define FONTFORGE_CONFIG_APPLE_ONLY_TTF                                    */


/* Nobody else puts apple unicode encodings into the name table. So I probably*/
/*  shouldn't either.  But if someone wants them...                           */
/*                                                                            */
/* #define FONTFORGE_CONFIG_APPLE_UNICODE_NAMES                               */


/* I used to use an approximation method when converting cubic to quadratic   */
/*  splines which was non-symmetric. In some cases it produced better results */
/*  than the current approach. This flag restores the old algorithm.          */
/*                                                                            */
/* #define FONTFORGE_CONFIG_NON_SYMMETRIC_QUADRATIC_CONVERSION                */


/* Prior to late Sept of 2003 FontForge converted certain mac feature/settings */
/*  into opentype-like tags. Some features could be converted directly but for */
/*  a few I made up tags.  Now FontForge is capable of using the mac feature   */
/*  settings directly. If you set this flag then when FontForge loads in an sfd*/
/*  file with these non-standard opentype tags, it will convert them into the  */
/*  appropriate mac feature/setting combinations.                              */
/*                                                                             */
/* #define FONTFORGE_CONFIG_CVT_OLD_MAC_FEATURES                               */


/* In addition to placing snippets of charstrings into subrs, I tried adding  */
/*  whole glyphs (when that was possible). To my surprise, it made things     */
/*  worse in one of my test cases, and barely registered an improvement in    */
/*  another.   So I think we're better off without it. But I don't understand */
/*  why things are worse so I'm leaving the code in to play with              */
/*                                                                            */
/* #define FONTFORGE_CONFIG_PS_REFS_GET_SUBRS                                 */

#endif /* FONTFORGE_CONFIG_H */
